# concurrency就是控制并发的，流水线运行后会自动加锁
# 在一个组的流水线任务只能有一个在运行，其他流水线任务会被pedding
# 文档：https://docs.github.com/zh/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
# concurrency:
#   group: archiving-group

name: Auto issues archiving

on:
  issues:
    types: [closed]

# permissions是关于GITHUB_TOKEN权限的，内容详见：
# https://docs.github.com/zh/actions/writing-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  issues: write

env:
  OUTPUT_PATH: "./output.json"

jobs:
  get_issue_details:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
  
      - name: Cache pip dependencies
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./src/issue_processor/requirements.txt
          pip install -r ./src/auto_archiving/requirements.txt
  
      - name: Processing issue content
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_STATE: ${{ github.event.issue.state }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_URL: "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}"
          COMMENTS_URL: "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"
        run: |
          cd ./
          python ./src/issue_processor/main.py -c "./config/issue_processor.json"

      - name: Archiving closed issues
        env:
          ISSUE_REPOSITORY: "外部Issue"
        run: |
          cd ./
          python ./src/auto_archiving/main.py -c "./config/auto_archiving.json" -fr "./归档失败记录.json"
          
      - name: Add and commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ./修改归档.md
          git commit -m "Closed $ISSUE_REPOSITORY#${{ github.event.issue.number }}"
          git push origin main


