# 已部署的gitlab runner 无法直接使用 docker hub
# 所以需要使用其他的docker镜像源
# 关于使用的镜像仓库的说明：
# https://github.com/DaoCloud/public-image-mirror
# 关于webhook的用法：
# https://docs.gitlab.com/ee/ci/triggers/#use-a-webhook
# gitlab ci里可用的预定义变量
# https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#predefined-variables
# https://docs.gitlab.com/ee/ci/variables/index.html

variables:
  # PIP_MIRROR_URL: https://mirrors.aliyun.com/pypi/simple  # PIP镜像源,其他流水线也用到了
  PIP_MIRROR_URL: https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple  # PIP镜像源
  UV_INDEX_URL: $PIP_MIRROR_URL # uv用的PIP镜像源
  UV_SYSTEM_PYTHON: 1 # uv配置,默认使用系统预装的python解释器
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"   # 让uv把三方包安装到放流水线的相对路径里
  UV_BIN: "$CI_PROJECT_DIR/.local/bin/uv"     # uv的二进制文件安装位置
  UV_LINK_MODE: copy        # 抑制流水线释放包缓存时uv发出hardlink的警告,这是缓存目录(/cache) 和容器层(/usr/...) 不在同一文件系统导致的,对性能无影响
  GIT_DEPTH: 1

stages:
  - rotate_access_token
  - auto_archiving
  - check_config
  - unittest

include:
  - local: "/.gitlab/workflows/AutoArchiving.yml"
  - local: "/.gitlab/workflows/RotateAccessToken.yml"
  - local: "/.gitlab/workflows/CheckConfig.yml"
  - local: "/.gitlab/workflows/Unittest.yml"
    