# rotate仓库token，文档：
# https://docs.gitlab.com/ee/api/project_access_tokens.html#rotate-a-project-access-token

# token权限文档：
# https://docs.gitlab.com/17.3/ee/user/project/settings/project_access_tokens.html#scopes-for-a-project-access-token

# 流水线调度器（schedules）文档：
# https://docs.gitlab.com/ee/ci/pipelines/schedules.html#edit-a-pipeline-schedule


cache:
  paths:
    - .cache/uv      # 轮子缓存
    - .local/bin/uv  # uv 本体缓存
  key: "$CI_COMMIT_REF_SLUG"

variables:
  GITLAB_HOST: $CI_SERVER_HOST       # example: gitlab.com
  PROJECT_ID: $CI_PROJECT_ID         # example: 123456  
  TOKEN_TTL_DAYS: 93                 # 单位：天
  TARGET_VARIABLE_NAME: TOKEN

before_script:
  # 如果镜像里没 uv，就现装一个（用国内 pip 源）
  - export PATH="$CI_PROJECT_DIR/.local/bin:$PATH"  
  - |
    if [ ! -x "$UV_BIN" ]; then
      pip install --target "$CI_PROJECT_DIR/.local" uv -i "$PIP_MIRROR_URL"
    fi

rotate_access_token:
  # image: m.daocloud.io/docker.io/library/python:3.10.13-slim-bullseye
  image: anolis-registry.cn-zhangjiakou.cr.aliyuncs.com/openanolis/python:3.10.13-23-minimal
  tags: 
    - ubuntu
  stage: rotate_access_token
  only:
    - schedules
  script: |
    uv pip install -r ./pyproject.toml --system
    python3 ./rn_issues_auto_archiving/utils/rotate_access_token.py
  
